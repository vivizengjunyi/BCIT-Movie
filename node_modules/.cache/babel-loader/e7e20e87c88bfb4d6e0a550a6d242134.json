{"ast":null,"code":"var _jsxFileName = \"/Users/chenzhiling/Documents/BCIT/JS3-react/assignment/movie-database/movie/src/components/Header.js\",\n    _s = $RefreshSig$();\n\nimport { NavLink, useLocation } from 'react-router-dom';\nimport Slider from './Slider';\nimport Nav from './Nav';\nimport { title } from '../globals/globalVariables'; //import Membership from './Membership'\n\nimport { FaUserAlt } from 'react-icons/fa';\nimport { GiHamburgerMenu } from 'react-icons/gi';\nimport { VscError } from 'react-icons/vsc';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Header = () => {\n  _s();\n\n  const location = useLocation();\n  const [burgerMenuShow, setBurgerMenuShow] = useState(true);\n\n  const toggle = () => {\n    if (burgerMenuShow === true) {\n      setBurgerMenuShow(false);\n    } else {\n      setBurgerMenuShow(true);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    children: [(location.pathname === '/' || location.pathname.indexOf('/sort/') > -1) && /*#__PURE__*/_jsxDEV(Slider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 93\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"flex-column\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(NavLink, {\n            to: \"/\",\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this), burgerMenuShow === true ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"little-gap\",\n          children: [/*#__PURE__*/_jsxDEV(GiHamburgerMenu, {\n            className: \"burgerMenuIcon\",\n            onClick: toggle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(FaUserAlt, {\n            className: \"userIcon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(VscError, {\n          class: \"closeMenuIcon\",\n          onClick: toggle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), burgerMenuShow === false && /*#__PURE__*/_jsxDEV(Nav, {\n        toggle: toggle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 46\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Header, \"GAoAoJwz8UKkLHV20zAzhj2btRs=\", false, function () {\n  return [useLocation];\n});\n\n_c = Header;\nexport default Header;\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["/Users/chenzhiling/Documents/BCIT/JS3-react/assignment/movie-database/movie/src/components/Header.js"],"names":["NavLink","useLocation","Slider","Nav","title","FaUserAlt","GiHamburgerMenu","VscError","useState","Header","location","burgerMenuShow","setBurgerMenuShow","toggle","pathname","indexOf"],"mappings":";;;AACA,SAASA,OAAT,EAAkBC,WAAlB,QAAqC,kBAArC;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,SAASC,KAAT,QAAsB,4BAAtB,C,CACA;;AACA,SAASC,SAAT,QAA0B,gBAA1B;AACA,SAASC,eAAT,QAAgC,gBAAhC;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AAIA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACjB,QAAMC,QAAQ,GAAGT,WAAW,EAA5B;AACA,QAAM,CAACU,cAAD,EAAiBC,iBAAjB,IAAsCJ,QAAQ,CAAC,IAAD,CAApD;;AAEA,QAAMK,MAAM,GAAG,MAAM;AACjB,QAAIF,cAAc,KAAK,IAAvB,EAA6B;AACzBC,MAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACH,KAFD,MAEO;AACHA,MAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACH;AACJ,GAND;;AAQA,sBACI;AAAA,eAEQ,CAACF,QAAQ,CAACI,QAAT,KAAsB,GAAtB,IAA8BJ,QAAQ,CAACI,QAAT,CAAkBC,OAAlB,CAA0B,QAA1B,IAAsC,CAAC,CAAtE,kBAA4E,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAFpF,eAII;AAAK,MAAA,KAAK,EAAC,aAAX;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,gCACI;AAAA,iCACI,QAAC,OAAD;AAAS,YAAA,EAAE,EAAC,GAAZ;AAAA,sBAAiBX;AAAjB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,EAIKO,cAAc,KAAK,IAAnB,gBACG;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,kCACI,QAAC,eAAD;AAAiB,YAAA,SAAS,EAAC,gBAA3B;AAA4C,YAAA,OAAO,EAAEE;AAArD;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,SAAD;AAAW,YAAA,SAAS,EAAC;AAArB;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADH,gBAKG,QAAC,QAAD;AAAU,UAAA,KAAK,EAAC,eAAhB;AAAgC,UAAA,OAAO,EAAEA;AAAzC;AAAA;AAAA;AAAA;AAAA,gBATR;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAaKF,cAAc,KAAK,KAAnB,iBAA4B,QAAC,GAAD;AAAK,QAAA,MAAM,EAAEE;AAAb;AAAA;AAAA;AAAA;AAAA,cAbjC;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAsBH,CAlCD;;GAAMJ,M;UACeR,W;;;KADfQ,M;AAoCN,eAAeA,MAAf","sourcesContent":["\nimport { NavLink, useLocation } from 'react-router-dom';\nimport Slider from './Slider';\nimport Nav from './Nav';\nimport { title } from '../globals/globalVariables';\n//import Membership from './Membership'\nimport { FaUserAlt } from 'react-icons/fa'\nimport { GiHamburgerMenu } from 'react-icons/gi';\nimport { VscError } from 'react-icons/vsc';\nimport { useState } from 'react';\n\n\n\nconst Header = () => {\n    const location = useLocation();\n    const [burgerMenuShow, setBurgerMenuShow] = useState(true);\n\n    const toggle = () => {\n        if (burgerMenuShow === true) {\n            setBurgerMenuShow(false);\n        } else {\n            setBurgerMenuShow(true);\n        }\n    }\n\n    return (\n        <header>\n            {\n                (location.pathname === '/' ||  location.pathname.indexOf('/sort/') > -1) && <Slider />\n            }\n            <div class='flex-column'>\n                <div className='flex-row'>\n                    <p>\n                        <NavLink to=\"/\">{title}</NavLink>\n                    </p>\n                    {burgerMenuShow === true ? (\n                        <div className='little-gap'>\n                            <GiHamburgerMenu className='burgerMenuIcon' onClick={toggle} />\n                            <FaUserAlt className='userIcon' />\n                        </div>\n                    ) : <VscError class='closeMenuIcon' onClick={toggle} />\n                    }\n                </div>\n                {burgerMenuShow === false && <Nav toggle={toggle} />}\n            </div>\n        </header>\n    )\n}\n\nexport default Header\n"]},"metadata":{},"sourceType":"module"}