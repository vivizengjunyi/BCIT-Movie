{"ast":null,"code":"var _jsxFileName = \"/Users/chenzhiling/Documents/BCIT/JS3-react/assignment/movie-database/movie/src/components/Slider.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState, useRef } from \"react\";\nimport { Link } from 'react-router-dom';\nimport { API_TOKEN } from '../globals/globalVariables';\nimport { IoArrowBackCircle, IoArrowForwardCircle } from 'react-icons/io5';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Slider = () => {\n  _s();\n\n  const [singleSliderMovies, setSingleSliderMovies] = useState([]);\n  useEffect(() => {\n    const fecthMovies = async () => {\n      const res = await fetch(`https://api.themoviedb.org/3/movie/now_playing?api_key=<<api_key>>&language=en-US&page=1`, {\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer ' + API_TOKEN\n        }\n      });\n      let rawMovieData = await res.json();\n      rawMovieData = rawMovieData.results.splice(0, 4);\n      setSingleSliderMovies(rawMovieData);\n    };\n\n    fecthMovies();\n  }, []);\n  const [current, setCurrent] = useState(0);\n  const length = singleSliderMovies.length;\n  const timeout = useRef(null);\n  useEffect(() => {\n    const nextSlide = () => {\n      setCurrent(current => current === length - 1 ? 0 : current + 1);\n    };\n\n    timeout.current = setTimeout(nextSlide, 2000);\n    return function () {\n      if (timeout.current) {\n        clearTimeout(timeout.current);\n      }\n    };\n  }, [current, length]);\n\n  const nextSlide = () => {\n    if (timeout.current) {\n      clearTimeout(timeout.current);\n    }\n\n    setCurrent(current === length - 1 ? 0 : current + 1);\n  };\n\n  const preSlide = () => {\n    if (timeout.current) {\n      clearTimeout(timeout.current);\n    }\n\n    setCurrent(current === 0 ? length - 1 : current - 1);\n  };\n\n  if (!Array.isArray(singleSliderMovies) || length <= 0) {\n    return null;\n  }\n  /**\n   * \n   * adult: false\n  backdrop_path: \"/7WJjFviFBffEJvkAms4uWwbcVUk.jpg\"\n  genre_ids: [12, 14, 35, 28]\n  id: 451048\n  original_language: \"en\"\n  original_title: \"Jungle Cruise\"\n  overview: \"Dr. Lily Houghton enlists the aid of wisecracking skipper Frank Wolff to take her down the Amazon in his dilapidated boat. Together, they search for an ancient tree that holds the power to heal â€“ a discovery that will change the future of medicine.\"\n  popularity: 5788.065\n  poster_path: \"https://api.themoviedb.org/3/movie/now_playing/9dKCd55IuTT5QRs989m9Qlb7d2B.jpg\"\n  release_date: \"2021-07-28\"\n  title: \"Jungle Cruise\"\n  video: false\n  vote_average: 7.9\n  vote_count: 1801\n   */\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"outerContainer\",\n    children: singleSliderMovies.map((singleSliderMovie, index) => /*#__PURE__*/_jsxDEV(Link, {\n      to: `/movie/${singleSliderMovie.id}`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sliderWrapper\",\n        children: index === current && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sliderContainer\",\n          style: {\n            backgroundImage: `url(https://image.tmdb.org/t/p/original/${singleSliderMovie.backdrop_path})`\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: 'https://image.tmdb.org/t/p/w500/' + singleSliderMovie.poster_path,\n            alt: singleSliderMovie.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(IoArrowBackCircle, {\n            onClick: preSlide,\n            className: \"back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(IoArrowForwardCircle, {\n            onClick: nextSlide,\n            className: \"next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 33\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 9\n  }, this);\n}; //\n//\n\n\n_s(Slider, \"DP+SyoeMGe8IVJOereW8ZcPspMM=\");\n\n_c = Slider;\nexport default Slider;\n/*\n                <Carousel>\n            {sliderMovies.map((singleSliderMovie, i) => (\n                            <Carousel.Item interval={1000}>\n                                <img\n                                className=\"d-block w-100\"\n                                src={'https://image.tmdb.org/t/p/w500/' + singleSliderMovie.poster_path}\n                                alt={singleSliderMovie.title}\n                            />\n                            <Carousel.Caption>\n                                <h3>{singleSliderMovie.title}</h3>\n                                <p>{singleSliderMovie.vote_average} | {singleSliderMovie.release_date}</p>\n                                <Link to={`/movie/${singleSliderMovie.id}`}>More Info</Link>\n                            </Carousel.Caption>\n                        </Carousel.Item>\n            ))\n            }\n            }\n        </Carousel> */\n\nvar _c;\n\n$RefreshReg$(_c, \"Slider\");","map":{"version":3,"sources":["/Users/chenzhiling/Documents/BCIT/JS3-react/assignment/movie-database/movie/src/components/Slider.js"],"names":["useEffect","useState","useRef","Link","API_TOKEN","IoArrowBackCircle","IoArrowForwardCircle","Slider","singleSliderMovies","setSingleSliderMovies","fecthMovies","res","fetch","headers","rawMovieData","json","results","splice","current","setCurrent","length","timeout","nextSlide","setTimeout","clearTimeout","preSlide","Array","isArray","map","singleSliderMovie","index","id","backgroundImage","backdrop_path","poster_path","title"],"mappings":"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","sourcesContent":["import { useEffect, useState, useRef } from \"react\";\nimport { Link } from 'react-router-dom';\nimport { API_TOKEN } from '../globals/globalVariables';\nimport { IoArrowBackCircle, IoArrowForwardCircle } from 'react-icons/io5';\n\nconst Slider = () => {\n\n    const [singleSliderMovies, setSingleSliderMovies] = useState([]);\n\n    useEffect(() => {\n\n        const fecthMovies = async () => {\n            const res = await fetch(`https://api.themoviedb.org/3/movie/now_playing?api_key=<<api_key>>&language=en-US&page=1`, {\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json',\n                    'Authorization': 'Bearer ' + API_TOKEN\n                }\n            });\n\n            let rawMovieData = await res.json();\n            rawMovieData = rawMovieData.results.splice(0, 4);\n            setSingleSliderMovies(rawMovieData);\n        }\n\n        fecthMovies();\n\n    }, []);\n\n    const [current, setCurrent] = useState(0);\n    const length = singleSliderMovies.length;\n    const timeout = useRef(null);\n\n    useEffect(() => {\n        const nextSlide = () => {\n            setCurrent(current => (current === length - 1 ? 0 : current + 1));\n        }\n        timeout.current = setTimeout(nextSlide, 2000);\n\n        return function () {\n            if (timeout.current) {\n                clearTimeout(timeout.current);\n            }\n        }\n\n    }, [current, length]);\n\n    const nextSlide = () => {\n        if (timeout.current) {\n            clearTimeout(timeout.current);\n        }\n\n        setCurrent(current === length - 1 ? 0 : current + 1);\n\n    }\n\n    const preSlide = () => {\n        if (timeout.current) {\n            clearTimeout(timeout.current);\n        }\n        setCurrent(current === 0 ? length - 1 : current - 1);\n    }\n\n    if (!Array.isArray(singleSliderMovies) || length <= 0) {\n        return null;\n    }\n\n    /**\n     * \n     * adult: false\n    backdrop_path: \"/7WJjFviFBffEJvkAms4uWwbcVUk.jpg\"\n    genre_ids: [12, 14, 35, 28]\n    id: 451048\n    original_language: \"en\"\n    original_title: \"Jungle Cruise\"\n    overview: \"Dr. Lily Houghton enlists the aid of wisecracking skipper Frank Wolff to take her down the Amazon in his dilapidated boat. Together, they search for an ancient tree that holds the power to heal â€“ a discovery that will change the future of medicine.\"\n    popularity: 5788.065\n    poster_path: \"https://api.themoviedb.org/3/movie/now_playing/9dKCd55IuTT5QRs989m9Qlb7d2B.jpg\"\n    release_date: \"2021-07-28\"\n    title: \"Jungle Cruise\"\n    video: false\n    vote_average: 7.9\n    vote_count: 1801\n     */\n\n    return (\n        <div className='outerContainer'>\n            {singleSliderMovies.map((singleSliderMovie, index) => (\n                <Link to={`/movie/${singleSliderMovie.id}`}>\n                    <div className='sliderWrapper'>\n                        {index === current && (\n                            <div key={index} className='sliderContainer' style={{ backgroundImage: `url(https://image.tmdb.org/t/p/original/${singleSliderMovie.backdrop_path})` }}>\n                                <img src={'https://image.tmdb.org/t/p/w500/' + singleSliderMovie.poster_path} alt={singleSliderMovie.title} />\n                                <IoArrowBackCircle onClick={preSlide} className='back' />\n                                <IoArrowForwardCircle onClick={nextSlide} className='next' />\n                            </div>\n                        )}\n                    </div>\n                </Link>\n            ))}\n        </div>\n    )\n\n}\n\n//\n\n//\nexport default Slider\n\n\n/*\n                <Carousel>\n            {sliderMovies.map((singleSliderMovie, i) => (\n                            <Carousel.Item interval={1000}>\n                                <img\n                                className=\"d-block w-100\"\n                                src={'https://image.tmdb.org/t/p/w500/' + singleSliderMovie.poster_path}\n                                alt={singleSliderMovie.title}\n                            />\n                            <Carousel.Caption>\n                                <h3>{singleSliderMovie.title}</h3>\n                                <p>{singleSliderMovie.vote_average} | {singleSliderMovie.release_date}</p>\n                                <Link to={`/movie/${singleSliderMovie.id}`}>More Info</Link>\n                            </Carousel.Caption>\n                        </Carousel.Item>\n            ))\n            }\n            }\n        </Carousel> */"]},"metadata":{},"sourceType":"module"}