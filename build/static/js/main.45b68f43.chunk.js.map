{"version":3,"sources":["globals/globalVariables.js","components/Slider.js","components/Nav.js","components/Header.js","components/Footer.js","components/NavSort.js","images/no-image.jpeg","store/globalAppState.js","components/MovieCard.js","components/Movies.js","pages/PageHome.js","pages/PageAbout.js","pages/PageFavs.js","components/SingleMovie.js","pages/PageSingleMovie.js","routers/AppRouter.js","index.js"],"names":["API_TOKEN","Slider","useState","singleSliderMovies","setSingleSliderMovies","useEffect","a","fetch","headers","res","json","rawMovieData","results","splice","fecthMovies","current","setCurrent","length","timeout","useRef","setTimeout","clearTimeout","nextSlide","e","preventDefault","preSlide","Array","isArray","className","map","singleSliderMovie","index","style","backgroundImage","backdrop_path","to","id","src","poster_path","alt","title","onClick","Nav","toggle","show","handleClick","Header","location","useLocation","burgerMenuShow","setBurgerMenuShow","pathname","indexOf","class","Footer","tabs","text","categoryId","backgrounds","popular","top_rated","now_playing","upcoming","NavSort","tab","appStorageName","getFavs","favsFromStorage","localStorage","getItem","JSON","parse","actions","addFav","objMovie","favs","find","fav","push","newFavsForStorage","stringify","from","Set","setItem","removeFav","filter","favsForStorage","MovieCard","movieObj","onUpdate","globalAppState","setFavs","arr","handleSetFavs","isFave","some","item","noImage","release_date","vote_average","overview","Movies","movieData","oneMovie","i","PageHome","useParams","setMovieData","fetchMovies","PageAbout","PageFavs","SingleMovie","genre_ids","PageSingleMovie","fecthMovie","AppRouter","path","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.45b68f43.chunk.js","sourcesContent":["// Global Variables\nexport const API_KEY = '17d87095f2cdce0db3600b9659b0c621';\nexport const API_TOKEN = 'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxN2Q4NzA5NWYyY2RjZTBkYjM2MDBiOTY1OWIwYzYyMSIsInN1YiI6IjYxMWJlNzAzNGEwYjE5MDA0NWM2MmQ4NyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.I7bffZOYQCup48LfeLOQlzxYv0_EjSugb6lVmRglJ10';\n\n//App titile\nexport const title = 'GoMovie';","import { useEffect, useState, useRef } from \"react\";\nimport { Link } from 'react-router-dom';\nimport { API_TOKEN } from '../globals/globalVariables';\nimport { IoArrowBackCircle, IoArrowForwardCircle } from 'react-icons/io5';\n\nconst Slider = () => {\n\n    const [singleSliderMovies, setSingleSliderMovies] = useState([]);\n\n    useEffect(() => {\n\n        const fecthMovies = async () => {\n            const res = await fetch(`https://api.themoviedb.org/3/movie/now_playing?api_key=<<api_key>>&language=en-US&page=1`, {\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json',\n                    'Authorization': 'Bearer ' + API_TOKEN\n                }\n            });\n\n            let rawMovieData = await res.json();\n            rawMovieData = rawMovieData.results.splice(0, 4);\n            setSingleSliderMovies(rawMovieData);\n        }\n\n        fecthMovies();\n\n    }, []);\n\n    const [current, setCurrent] = useState(0);\n    const length = singleSliderMovies.length;\n    const timeout = useRef(null);\n\n    useEffect(() => {\n        const nextSlide = () => {\n            setCurrent(current => (current === length - 1 ? 0 : current + 1));\n        }\n        timeout.current = setTimeout(nextSlide, 2000);\n\n        return function () {\n            if (timeout.current) {\n                clearTimeout(timeout.current);\n            }\n        }\n\n    }, [current, length]);\n\n    const nextSlide = (e) => {\n        e.preventDefault();\n        if (timeout.current) {\n            clearTimeout(timeout.current);\n        }\n\n        setCurrent(current === length - 1 ? 0 : current + 1);\n\n    }\n\n    const preSlide = (e) => {\n        e.preventDefault();\n        if (timeout.current) {\n            clearTimeout(timeout.current);\n        }\n        setCurrent(current === 0 ? length - 1 : current - 1);\n    }\n\n    if (!Array.isArray(singleSliderMovies) || length <= 0) {\n        return null;\n    }\n\n    return (\n        <div className='outerContainer'>\n            {singleSliderMovies.map((singleSliderMovie, index) => (\n                index === current && (\n\n                    <div className='sliderWrapper'>\n                        <div key={index} className='sliderContainer' style={{ backgroundImage: `url(https://image.tmdb.org/t/p/original/${singleSliderMovie.backdrop_path})` }}>\n                            <Link to={`/movie/${singleSliderMovie.id}`}>\n                                <img src={'https://image.tmdb.org/t/p/w500/' + singleSliderMovie.poster_path} alt={singleSliderMovie.title} />\n                            </Link>\n                            <IoArrowBackCircle onClick={preSlide} className='back' />\n                            <IoArrowForwardCircle onClick={nextSlide} className='next' />\n                        </div>\n                    </div>\n\n                )\n            ))}\n        </div>\n    )\n\n}\n\n//\n\n//\nexport default Slider","import { NavLink } from \"react-router-dom\";\nimport { FaSearch } from 'react-icons/fa';\n\nconst Nav = ({ toggle, show = false }) => {\n    const handleClick = toggle || (() => {})\n    return (\n        <nav className={`dropdownMenu ${show ? 'show-nav' : ''}`}>\n            <ul>\n                <li>\n                    <NavLink to=\"/\" onClick={handleClick}>Home</NavLink>\n                </li>\n                <li>\n                    <NavLink to=\"/favs\" onClick={handleClick}>Favs</NavLink>\n\n                </li>\n                <li>\n                    <NavLink to=\"/about\" onClick={handleClick}>About</NavLink>\n                </li>\n                <li>\n                    <FaSearch className='search-icon' />\n                </li>\n\n            </ul>\n        </nav>\n    )\n}\nexport default Nav;\n","\nimport { NavLink, useLocation } from 'react-router-dom';\nimport Slider from './Slider';\nimport Nav from './Nav';\nimport { title } from '../globals/globalVariables';\nimport { GiHamburgerMenu } from 'react-icons/gi';\nimport { VscError } from 'react-icons/vsc';\nimport { useState } from 'react';\n\n\n\nconst Header = () => {\n    const location = useLocation();\n    const [burgerMenuShow, setBurgerMenuShow] = useState(true);\n\n    const toggle = () => {\n        if (burgerMenuShow === true) {\n            setBurgerMenuShow(false);\n        } else {\n            setBurgerMenuShow(true);\n        }\n    }\n\n    return (\n        <header>\n            {\n                (location.pathname === '/' ||  location.pathname.indexOf('/sort/') > -1) && <Slider />\n            }\n            <div class='flex-column'>\n                <div className='flex-row'>\n                    <div className=\"brand\">\n                        <NavLink to=\"/\">{title}</NavLink>\n                    </div>\n                    <Nav show={true} />\n                    {burgerMenuShow === true ? (\n                        <div className='little-gap'>\n                            <GiHamburgerMenu className='burgerMenuIcon' onClick={toggle} />\n                        </div>\n                    ) : <VscError class='closeMenuIcon' onClick={toggle} />\n                    }\n                </div>\n                {burgerMenuShow === false && <Nav toggle={toggle} />}\n                \n            </div>\n        </header>\n    )\n}\n\nexport default Header\n","const Footer = () => {\n    return (\n        <footer>\n            <p>&copy; GoMovie</p>\n        </footer>\n    )\n}\n\nexport default Footer\n","import { useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nconst tabs = [\n    {\n        text: 'Popular',\n        categoryId: 'popular'\n    }, {\n        text: 'Top Rated',\n        categoryId: 'top_rated'\n    }, {\n        text: 'Now Playing',\n        categoryId: 'now_playing'\n    }, {\n        text: 'Upcoming',\n        categoryId: 'upcoming'\n    }\n];\n\n\n\nconst backgrounds = {\n    popular : 'background1',\n    top_rated : 'background2',\n    now_playing : 'background3',\n    upcoming : 'background4',\n};\nconst NavSort = ({ categoryId = 'popular' }) => {\n\n    return (\n        <div class='place-background'>\n            <nav className='navSort'>\n                <ul>\n                    {\n                        tabs.map(tab => (\n                            <li>\n                                <NavLink to={'/sort/' + tab.categoryId}>{tab.text}</NavLink>\n                            </li>\n                        ))\n                    }\n                </ul>\n            </nav>\n            <div className={backgrounds[categoryId]}></div>\n        </div>\n    )\n}\n\nexport default NavSort\n","export default __webpack_public_path__ + \"static/media/no-image.e550447a.jpeg\";","// Global App State\n\nconst appStorageName = 'movie';\nfunction getFavs(){\n    let favsFromStorage = localStorage.getItem(appStorageName);\n    if(favsFromStorage === null){\n        favsFromStorage = [];\n    }else{\n        favsFromStorage = JSON.parse(favsFromStorage);\n    }\n    return favsFromStorage;\n}\n\nconst actions = {\n    addFav: (objMovie) => {\n        const favs = getFavs();\n        if(favs.find(fav => fav.id === objMovie.id)) return;\n        favs.push(objMovie);\n        const newFavsForStorage = JSON.stringify(Array.from(new Set(favs)));\n        localStorage.setItem(appStorageName, newFavsForStorage);\n        return favs;\n    },\n    removeFav: (objMovie) => {\n        let favs = getFavs();\n        favs = favs.filter(fav => fav.id !== objMovie.id);\n        let favsForStorage = JSON.stringify(favs);\n        localStorage.setItem(appStorageName, favsForStorage);\n        return favs;\n    }\n}\n\nexport default {\n    getFavs,\n    actions\n};","import { useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom';\nimport noImage from '../images/no-image.jpeg';\nimport globalAppState from '../store/globalAppState';\nimport { BiRightArrowAlt } from 'react-icons/bi';\nimport { BsFillHeartFill } from 'react-icons/bs';\nimport { BsHeart } from 'react-icons/bs';\nimport { AiFillStar } from 'react-icons/ai';\nfunction getIsFav(arr, id) {\n    if (arr.length === 0) {\n        return false;\n    }\n    // Checks whether the object is favourited\n    return arr.some((item) => item.id === id);\n}\nfunction MovieCard({ movieObj, onUpdate, from }) {\n    const { getFavs, actions } = globalAppState;\n    const [favs, setFavs] = useState([])\n    useEffect(() => {\n        setFavs(getFavs());\n    }, []);\n    const handleSetFavs = (movieObj, isFave) => {\n        const favs = actions[isFave ? 'removeFav' : 'addFav'](movieObj);\n        setFavs(favs);\n        onUpdate && onUpdate();\n    }\n    return (\n        <div className=\"movie-card\">\n            {getIsFav(favs, movieObj.id) ?\n                <BsFillHeartFill className='float-right icon-fav' onClick={() => handleSetFavs(movieObj, true)} /> :\n                <BsHeart className='float-right icon-fav' onClick={() => handleSetFavs(movieObj, false)} />}\n            <div className=\"movie-poster\">\n                {movieObj.poster_path === null ?\n                    <img src={noImage} alt=\"No poster\" /> :\n                    <img src={`https://image.tmdb.org/t/p/w500/${movieObj.poster_path}`} alt={movieObj.title} />\n                }\n                {from === 'favs' &&\n                    <div className='movie-title'>{movieObj.title}</div>\n                }\n\n                {from === 'home' ?\n                    <div className=\"movieInfoSection\">\n                        <div className='movieInfo'>\n                            <p className='movieTitle'>{movieObj.title}</p>\n                            <div className='flex-row'>\n                                <p>{movieObj.release_date}</p>\n                                <div className='flex-row'>\n                                    <AiFillStar className='start' />\n                                    <p>{movieObj.vote_average}</p>\n                                </div>\n                            </div>\n                            <p className='overviewTitle'>Overview:</p>\n                            <p className='overview'>{movieObj.overview}</p>\n                            <Link to={`/movie/${movieObj.id}`} >More Info<BiRightArrowAlt /></Link>\n                        </div>\n\n                    </div> : \n                    <p className='movieTitle2'><Link to={`/movie/${movieObj.id}`} >{movieObj.title}</Link></p>\n                }\n            </div>\n\n        </div>\n    )\n}\n\nexport default MovieCard;\n","import MovieCard from \"./MovieCard\"\n\nconst Movies = ({ movieData }) => {\n    return (\n        <section className='movies-container'>\n            { movieData.map((oneMovie, i) => <MovieCard key={i} movieObj={oneMovie} from='home'/>)}\n        </section>\n    )\n}\n\nexport default Movies\n","import { useEffect, useState } from 'react';\nimport NavSort from '../components/NavSort';\nimport Movies from '../components/Movies';\nimport { API_TOKEN} from '../globals/globalVariables';\nimport { useParams, useLocation } from 'react-router-dom';\n\nfunction PageHome() {\n    const {categoryId = 'popular'} = useParams();\n\n    const [movieData, setMovieData] = useState(null);\n\n    useEffect(() => {\n        const fetchMovies = async () => {\n            const res = await fetch(`https://api.themoviedb.org/3/movie/${categoryId}?&language=en-US&page=1`, {\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json',\n                    'Authorization': 'Bearer ' + API_TOKEN\n                }\n            });\n\n            let rawMovieData = await res.json();\n            rawMovieData = rawMovieData.results.splice(0, 12);\n            setMovieData(rawMovieData);\n\n        }\n        fetchMovies();\n    }, [categoryId]);\n\n\n    return (\n        <section className=\"home-page\">\n            <NavSort categoryId={categoryId} />\n            {movieData !== null && <Movies movieData={movieData} />}\n        </section>\n    )\n}\n\nexport default PageHome;\n","const PageAbout = () => {\n    return (\n        <div className='page-about'>\n            <div className='about-content'>\n                <div className='about-gomovie-name'>About GoMovie</div>\n                <p>GoMovie is a community showing movie database. Every piece of data has been added by our amazing community dating back to 2008. GoMovie's strong international focus and breadth of data is largely unmatched and something we're incredibly proud of. Put simply, we live and breathe community and that's precisely what makes us different.</p>\n            </div>\n\n\n        </div>\n    )\n}\n\nexport default PageAbout;\n","import { useEffect, useState } from 'react'\nimport { NavLink } from \"react-router-dom\"\nimport globalAppState from '../store/globalAppState';\nimport MovieCard from \"../components/MovieCard\";\nimport { BsFillHeartFill } from 'react-icons/bs';\n\nconst PageFavs = () => {\n    const { getFavs } = globalAppState;\n    const [favs, setFavs] = useState([])\n    useEffect(() => {\n        setFavs(getFavs());\n    }, []);\n\n    const onUpdate = () => {\n        setFavs(getFavs());\n    }\n    return (\n        <div className='favs-Section'>\n            <p className='favs-paragraph'><BsFillHeartFill className='favs-heart'/>Your favorite movies:</p>\n            { favs.length?\n                <section className='movies-container'>\n                    {favs.map((oneMovie, i) => <MovieCard key={i} movieObj={oneMovie} onUpdate={onUpdate} />)}\n                </section> :\n                <section className='no-favs'>\n                    <p>You didn't favorite any movies, please<NavLink to='/'>select now.</NavLink></p>\n                </section>\n        \n        }\n\n        </div>\n    )\n}\n\nexport default PageFavs\n","import { AiFillStar } from 'react-icons/ai';\n\nconst SingleMovie = ({ movieObj }) => {\n    return (\n        <div>\n            <div className='single-movie'>\n                <div className='single-movie-content'>\n                    <div className='single-movie-poster'>\n                        {movieObj.poster_path == null ?\n                            <img src=\"/\" alt=\"no poster\" /> :\n                            <img src={`https://image.tmdb.org/t/p/w500/${movieObj.poster_path}`} alt={movieObj.title} />\n                        }\n                    </div>\n                    <div className='single-movie-info'>\n                        <p className='title'>{movieObj.title}</p>\n                        <div className='line'></div>\n                        <div className=\"flexRow\">\n                            <div className='stick'>\n                                <AiFillStar className='start' />\n                                <p>{movieObj.vote_average}</p>\n                            </div>\n                            <p>{movieObj.genre_ids}</p>\n                            <p>{movieObj.release_date}</p>\n                        </div>\n                        <p>{movieObj.overview}</p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default SingleMovie\n","import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport SingleMovie from \"../components/SingleMovie\";\nimport { API_TOKEN } from \"../globals/globalVariables\";\n\nconst PageSingleMovie = () => {\n\n    const [movieData, setMovieData] = useState(null);\n\n    const { id } = useParams();\n\n    useEffect(() => {\n        const fecthMovie = async () => {\n            const res = await fetch(`https://api.themoviedb.org/3/movie/${id}?language=en-US`, {\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json',\n                    'Authorization': 'Bearer ' + API_TOKEN\n                }\n            });\n\n            let rawMovieData = await res.json();\n            setMovieData(rawMovieData);\n        }\n\n        fecthMovie();\n    }, [])\n\n    return (\n        <div className='single-movie-page'>\n            {movieData !== null && <SingleMovie movieObj={movieData} />}\n        </div>\n    )\n}\n\nexport default PageSingleMovie\n","import { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport PageHome from '../pages/PageHome';\nimport PageAbout from '../pages/PageAbout';\nimport PageFavs from '../pages/PageFavs';\nimport PageSingleMovie from '../pages/PageSingleMovie';\n\nfunction AppRouter() {\n  return (\n    <Router>\n      <div className=\"wrapper\">\n        <Header />\n        <main>\n          <Switch>\n            <Route path=\"/\" exact><PageHome /></Route>\n            <Route path=\"/index.html\" exact><PageHome /></Route>\n            <Route path=\"/sort/:categoryId\"><PageHome /></Route>\n            <Route path=\"/about\"><PageAbout /></Route>\n            <Route path=\"/favs\"><PageFavs /></Route>\n            <Route path=\"/movie/:id\"><PageSingleMovie /></Route>\n          </Switch>\n        </main>\n        <Footer />\n      </div>\n    </Router>\n  );\n}\n\nexport default AppRouter;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport AppRouter from './routers/AppRouter';\nimport './styles/styles.scss';\nReactDOM.render(\n  <React.StrictMode>\n    <AppRouter />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}